// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM512.hdl
/**
 * Memory of 512 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
        // Direct the load to the correct RAM using the MSB (most sign. bits):
        DMux8Way(in=load, sel=address[6..8],
          a=l0, b=l1, c=l2, d=l3, e=l4, f=l5, g=l6, h=l7);

        // Create 8 RAM64 chips and use the LSB to specify the address within:
        RAM64(in=in, load=l0, address=address[0..5], out=out0);
        RAM64(in=in, load=l1, address=address[0..5], out=out1);
        RAM64(in=in, load=l2, address=address[0..5], out=out2);
        RAM64(in=in, load=l3, address=address[0..5], out=out3);
        RAM64(in=in, load=l4, address=address[0..5], out=out4);
        RAM64(in=in, load=l5, address=address[0..5], out=out5);
        RAM64(in=in, load=l6, address=address[0..5], out=out6);
        RAM64(in=in, load=l7, address=address[0..5], out=out7);

        // Select the correct output from one of the 8 registers:
        Mux8Way16(sel=address[6..8], out=out, 
          a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7);
}
